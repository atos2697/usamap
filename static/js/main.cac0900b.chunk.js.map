{"version":3,"sources":["AppEngine.js","App.js","reportWebVitals.js","index.js"],"names":["AppEngine","useState","mapData","setMapData","eduData","setEduData","useEffect","a","fetch","res","json","resJson","topojson","objects","counties","features","ans","ansJson","fetchMap","fetchEdu","tooltip","d3","selectAll","data","enter","append","attr","style","d","eduObject","find","object","on","eduObject2","pageX","pageY","html","minWidth","backgroundColor","color","height","fontSize","display","alignItems","justifyContent","id","width","marginTop","x","y","fill","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cac0900b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport \"./svg.css\";\n\nconst AppEngine = () => {\n  const [mapData, setMapData] = useState([]);\n  const [eduData, setEduData] = useState([]);\n\n  const width = 1000;\n  const height = 600;\n\n  useEffect(() => {\n    async function fetchMap() {\n      const res = await fetch(\n        \"https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/counties.json\"\n      );\n      const resJson = await res.json();\n      setMapData(topojson.feature(resJson, resJson.objects.counties).features);\n    }\n    async function fetchEdu() {\n      const ans = await fetch(\n        \"https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/for_user_education.json\"\n      );\n      const ansJson = await ans.json();\n      setEduData(ansJson);\n    }\n    fetchMap();\n    fetchEdu();\n  }, []);\n\n  const tooltip = d3.select(\"#tooltip\");\n\n  d3.select(\"svg\")\n    .selectAll(\"path\")\n    .data(mapData)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", d3.geoPath())\n    .style(\"cursor\", \"pointer\")\n    .style(\"fill\", (d) => {\n      const eduObject = eduData.find((object) => {\n        return object[\"fips\"] === d[\"id\"];\n      });\n      if (eduObject[\"bachelorsOrHigher\"] <= 15) {\n        return \"#48dbfb\";\n      } else if (eduObject[\"bachelorsOrHigher\"] <= 30) {\n        return \"#0abde3\";\n      } else if (eduObject[\"bachelorsOrHigher\"] <= 45) {\n        return \"#00d2d3\";\n      } else if (eduObject[\"bachelorsOrHigher\"] <= 60) {\n        return \"#01a3a4\";\n      } else if (eduObject[\"bachelorsOrHigher\"] > 60) {\n        return \"#1dd1a1\";\n      }\n    })\n    .on(\"mouseover\", (d) => {\n      const eduObject2 = eduData.find((object) => {\n        return object[\"fips\"] === d[\"id\"];\n      });\n      const popo = \"%\";\n      tooltip\n        .style(\"visibility\", \"visible\")\n        .style(\"left\", d3.event.pageX - 30 + \"px\")\n        .style(\"top\", d3.event.pageY - 68 + \"px\");\n      tooltip.html(\n        eduObject2[\"area_name\"] +\n          \", \" +\n          eduObject2[\"state\"] +\n          \"<br/>\" +\n          eduObject2[\"bachelorsOrHigher\"] +\n          popo\n      );\n    })\n    .on(\"mouseout\", (d) => {\n      tooltip.style(\"visibility\", \"hidden\");\n    });\n\n  return (\n    <div\n      style={{\n        minWidth: \"1000px\",\n        backgroundColor: \"#485460\",\n        color: \"white\",\n        height: \"auto\",\n      }}\n    >\n      <h1 style={{ fontSize: \"60px\" }}>United States Educational Attainment</h1>\n      <h5>\n        Percentage of adults age 25 and older with a bachelor's degree or higher\n        (2010-2014)\n      </h5>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div id=\"tooltip\"></div>\n      </div>\n      <svg width={width} height={height} id=\"svg\">\n        {\" \"}\n      </svg>\n      <div>\n        <svg width=\"1000\" style={{ marginTop: \"30px\" }}>\n          <g>\n            <rect x=\"70\" y=\"10\" width=\"20\" height=\"20\" fill=\"#48dbfb\"></rect>\n            <text x=\"100\" y=\"25\" fill=\"white\">\n              Less than 15%\n            </text>\n          </g>\n          <g>\n            <rect x=\"240\" y=\"10\" width=\"20\" height=\"20\" fill=\"#0abde3\"></rect>\n            <text x=\"270\" y=\"25\" fill=\"white\">\n              15% - 30%\n            </text>\n          </g>\n          <g>\n            <rect x=\"390\" y=\"10\" width=\"20\" height=\"20\" fill=\"#00d2d3\"></rect>\n            <text x=\"420\" y=\"25\" fill=\"white\">\n              30% - 45%\n            </text>\n          </g>\n          <g>\n            <rect x=\"540\" y=\"10\" width=\"20\" height=\"20\" fill=\"#01a3a4\"></rect>\n            <text x=\"570\" y=\"25\" fill=\"white\">\n              45% - 60%\n            </text>\n          </g>\n          <g>\n            <rect x=\"680\" y=\"10\" width=\"20\" height=\"20\" fill=\"#1dd1a1\"></rect>\n            <text x=\"720\" y=\"25\" fill=\"white\">\n              More than 60%\n            </text>\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default AppEngine;\n","import \"./App.css\";\nimport AppEngine from \"./AppEngine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppEngine />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}